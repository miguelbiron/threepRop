% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/simulate_network.R
\name{simulate_simple_SBM}
\alias{simulate_simple_SBM}
\title{Simulate simplified Stochastic Block Model}
\usage{
simulate_simple_SBM(N, p_1, D, R, p_d = NULL, p_s = NULL,
  verb = FALSE)
}
\arguments{
\item{N}{number of nodes.}

\item{p_1}{probability of a node being labelled as 1.}

\item{D}{expected density of the network, between 0 and 1.}

\item{R}{assortativeness parameter (non-negative). See Details.}

\item{p_d}{(alternative parameterization) probability of an edge existing
between nodes with different labels (see Details).}

\item{p_s}{(alternative parameterization) probability of an edge existing
between nodes with equal labels (see Details).}

\item{verb}{prints minor details about the simulation.}
}
\value{
a named list with \code{y} being a sparse vector of labels, and
\code{A} a sparse adjacency matrix.
}
\description{
This function simulates a special case of the Stochastic Block Model (SBM).
}
\details{
In this simplified version, there are only 2 distinct labels. Nodes with
different labels have an edge between them with probability \code{p_d},
while the probability is \code{p_s} if they have matching labels. In the
language of the SBM, the matrix of edge probabilities is completely specified
by one number associated with the diagonal (\code{p_s}), and another for the
off-diagonal elements (\code{p_d}).

In spite of the above, the preferred way of specifying the model is by the
tuple \code{(N, p_1, D, R)}, where \code{D} is the expected density of the
network (between 0 and 1), and \code{R} (non-negative) controls its
assortativeness: for \code{R>1}, links are more common between pairs of nodes
with equal labels (assortative network). For \code{R<1}, the opposite is true
(disassortative network).

The use can choose between supplying \code{(N, p_1, D, R)} or
\code{(N, p_1, p_s, p_d)}, but they cannot be mixed.

Note that this implementation takes advantage of the structure of the SBM
to efficiently sample sparse random objects. One consequence of this is that
the elements of \code{y} are ordered, starting with all the positive nodes,
and then all the non-positives. The same happens with \code{A}, which is
partitioned into according blocks. If this is an issue, the user can always
permute the elements of \code{y} and \code{A} in a random but consistent
fashion.
}
\examples{
res = simulate_simple_SBM(N=25L, p_1=0.2, D = 0.1, R = 0.25)
str(res)
res2 = simulate_simple_SBM(N=25L, p_1=0.2, p_s = 0.001, p_d = 0.25)
str(res2)
\dontrun{
    # invalid combination of parameterizations
    simulate_simple_SBM(N=25L, p_1=0.2, D = 0.001, p_d = 0.25)
}

}
